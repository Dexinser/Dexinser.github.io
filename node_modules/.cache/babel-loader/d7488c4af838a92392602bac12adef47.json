{"remainingRequest":"/Users/pengfeixu/Personal/Project/Dexinser.github.io/node_modules/thread-loader/dist/cjs.js!/Users/pengfeixu/Personal/Project/Dexinser.github.io/node_modules/babel-loader/lib/index.js!/Users/pengfeixu/Personal/Project/Dexinser.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/pengfeixu/Personal/Project/Dexinser.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pengfeixu/Personal/Project/Dexinser.github.io/src/views/Brand.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pengfeixu/Personal/Project/Dexinser.github.io/src/views/Brand.vue","mtime":1683567615502},{"path":"/Users/pengfeixu/Personal/Project/Dexinser.github.io/babel.config.js","mtime":1683562074236},{"path":"/Users/pengfeixu/Personal/Project/Dexinser.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pengfeixu/Personal/Project/Dexinser.github.io/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pengfeixu/Personal/Project/Dexinser.github.io/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/pengfeixu/Personal/Project/Dexinser.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pengfeixu/Personal/Project/Dexinser.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}